-----Programs are lists of function definitions____

PDefs.   Program ::= [Def] ;
terminator Def "" ;

DFun.    Def    ::= Type Id "(" [Arg] ")" "{" [Stm] "}" ;
separator Arg "," ;
terminator Stm "" ; 

ADecl.   Arg    ::= Type Id ;

------Types and identifiers____

rules Type   ::= "bool" | "int" | "double" | "void" ;

token Id (letter (letter | digit | '_')*) ;

------Statements____

SDecls.  Stm    ::= Type [Id] ";" ;
SInit.   Stm    ::= Type Id "=" Exp ";" ;
SBlock. Stm     ::= "{" [Stm] "}" ;
SReturn. Stm    ::= "return" Exp ";" ;
SExp.    Stm    ::= Exp ";" ;
SWhile.  Stm    ::= "while" "(" Exp ")" Stm ;
SIfElse. Stm    ::= "if" "(" Exp ")" Stm "else" Stm ;

separator nonempty Id "," ;

------Expressions____

EId.        Exp15  ::= Id ;
EInt.       Exp15  ::= Integer ;
EDouble.    Exp15  ::= Double ;
EFalse.     Exp15  ::= "false" ;
ETrue.      Exp15  ::= "true" ;

EPlus.      Exp11  ::= Exp11 "+"  Exp12 ;  -- Left assoc.
EMinus.     Exp11  ::= Exp11 "-"  Exp12 ;  -- Left assoc.
ETimes.     Exp12  ::= Exp12 "*"  Exp13 ;  -- Left assoc.
EDiv.       Exp12  ::= Exp12 "/"  Exp13 ;  -- Left assoc.

EApp.       Exp14  ::= Id "(" [Exp] ")" ;  -- Restricted to Id.
EPostIncr.  Exp14  ::= Id "++" ;        -- Restricted to Id.
EPostDecr.  Exp14  ::= Id "--" ;        -- Restricted to Id.
EPreIncr.   Exp13  ::= "++" Id ;        -- Restricted to Id.
EPreDecr.   Exp13  ::= "--" Id ;        -- Restricted to Id.


ELt.        Exp9   ::= Exp10 "<"  Exp10 ;  -- Non-assoc.
EGt.        Exp9   ::= Exp10 ">"  Exp10 ;  -- Non-assoc.
ELtEq.      Exp9   ::= Exp10 "<=" Exp10 ;  -- Non-assoc.
EGtEq.      Exp9   ::= Exp10 ">=" Exp10 ;  -- Non-assoc.

EEq.        Exp8   ::= Exp9  "==" Exp9  ;  -- Non-assoc.
ENEq.       Exp8   ::= Exp9  "!=" Exp9  ;  -- Non-assoc.

EAnd.       Exp4   ::= Exp4  "&&" Exp5  ;  -- Left assoc.
EOr.        Exp3   ::= Exp3  "||" Exp4  ;  -- Left assoc.

EAss.       Exp2   ::= Id    "="  Exp2  ;  -- Right assoc.  Restricted to Id.

coercions Exp 15 ;

separator Exp "," ;

------Comment syntax____

--comment "#" ;
--comment "//" ;
--comment "/*" "*/" ;
