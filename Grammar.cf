PDefs.   Program ::= [Def] ;

terminator nonempty Def "" ;

DFun.    Def   ::= Type Id "(" [Arg] ")" "{" [Stm] "}" ;

ADecl.   Arg   ::= Type Id ;

separator Arg "," ;

SExp.    Stm   ::= Exp ";" ;
SReturn. Stm   ::= "return" Exp ";" ;

terminator Stm "" ;

EInt.    Exp16 ::= Integer ;
EString. Exp16 ::= String ;
EId.     Exp16 ::= Id ;
EQConst. Exp16 ::= QConst ;

ELShift. Exp10 ::= Exp10 "<<" Exp11 ;
ERShift. Exp10 ::= Exp10 ">>" Exp11 ;

coercions Exp 16 ;

DQConst.     QConst     ::= [QConstElem] ;
DQConstElem. QConstElem ::= Id ;

separator nonempty QConstElem "::" ;

rules Type ::= Id | "int" | "string" | QConst ;

token Id (letter (letter | digit | '_')*) ;

comment "#" ;
comment "//" ;