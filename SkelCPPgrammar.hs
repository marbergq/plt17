module SkelCPPGrammar where

-- Haskell module generated by the BNF converter

import AbsCPPGrammar
import ErrM
type Result = Err String

failure :: Show a => a -> Result
failure x = Bad $ "Undefined case: " ++ show x

transId :: Id -> Result
transId x = case x of
  Id string -> failure x
transProgram :: Program -> Result
transProgram x = case x of
  PDefs defs -> failure x
transDef :: Def -> Result
transDef x = case x of
  DFunction type_ id args stmts -> failure x
  DQConst qconst -> failure x
  DStmt stmt -> failure x
transType :: Type -> Result
transType x = case x of
  Type_int -> failure x
  Type_bool -> failure x
  Type_char -> failure x
  Type_double -> failure x
  Type_void -> failure x
  TypeQConst qconst -> failure x
  Type1 type_ -> failure x
transArg :: Arg -> Result
transArg x = case x of
  AType type_ -> failure x
  AId type_ id -> failure x
  AExp type_ id exp -> failure x
  AConst type_ id -> failure x
transStmt :: Stmt -> Result
transStmt x = case x of
  SExp exp -> failure x
  SRet exp -> failure x
  SVarDecl type_ vars -> failure x
  SVarDecc type_ vars -> failure x
  SWhile exp stmt -> failure x
  SDoWhile stmt exp -> failure x
  SFor arg exp1 exp2 stmt -> failure x
  SIf exp stmt -> failure x
  SIfElse exp stmt1 stmt2 -> failure x
  SBlock stmts -> failure x
  SFun -> failure x
  STDef type_ id -> failure x
transVar :: Var -> Result
transVar x = case x of
  Vreserve id -> failure x
  Vinit id exp -> failure x
transQConst :: QConst -> Result
transQConst x = case x of
  QConstDef qcelems -> failure x
transQCElem :: QCElem -> Result
transQCElem x = case x of
  Qconstelem id -> failure x
transLit :: Lit -> Result
transLit x = case x of
  LChar char -> failure x
  LDouble double -> failure x
  LInt integer -> failure x
  Lstring strings -> failure x
transExp :: Exp -> Result
transExp x = case x of
  EId id -> failure x
  Elit lit -> failure x
  EQualConst qconst -> failure x
  Eindex exp1 exp2 -> failure x
  Efun exp exps -> failure x
  EStProjDot exp1 exp2 -> failure x
  EStProjArr exp1 exp2 -> failure x
  EIncr exp -> failure x
  EDecr exp -> failure x
  EIncrPre exp -> failure x
  EDerefer exp -> failure x
  ENeg exp -> failure x
  EMul exp1 exp2 -> failure x
  EDiv exp1 exp2 -> failure x
  ERem exp1 exp2 -> failure x
  EAdd exp1 exp2 -> failure x
  ESub exp1 exp2 -> failure x
  ELShift exp1 exp2 -> failure x
  ERShift exp1 exp2 -> failure x
  ECompLeq exp1 exp2 -> failure x
  ECompGeq exp1 exp2 -> failure x
  ECompLess exp1 exp2 -> failure x
  ECompGtr exp1 exp2 -> failure x
  EEq exp1 exp2 -> failure x
  EInEq exp1 exp2 -> failure x
  ECon exp1 exp2 -> failure x
  EDis exp1 exp2 -> failure x
  EAss exp1 exp2 -> failure x
  EAssAdd exp1 exp2 -> failure x
  EAssSub exp1 exp2 -> failure x
  ECond exp1 exp2 exp3 -> failure x
  EThrow exp -> failure x

